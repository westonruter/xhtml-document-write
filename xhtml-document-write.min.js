/* 
 * XHTML documment.write() Support (v1.2) - Parses string argument into DOM nodes
 *     appends them to the document immediately after the last loaded SCRIPT element,
 *     or to the BODY if the document has been loaded.
 *  by Weston Ruter, Shepherd Interactive <http://www.shepherd-interactive.com/>
 *  <http://shepherd-interactive.googlecode.com/svn/trunk/xhtml-document-write/>
 * 
 * Copyright 2008, Shepherd Interactive. Licensed under GPL <http://creativecommons.org/licenses/GPL/2.0/>
 * Incorporates HTML Parser By John Resig <http://ejohn.org/files/htmlparser.js>
 * Original code by Erik Arvidsson, Mozilla Public License
 *
 * $Id$
 */

try{
document.write("");
if(window.opera&&document.documentElement.namespaceURI){
throw Error();
}
}
catch(e){
(function(){
var _1="http://www.w3.org/1999/xhtml";
var _2=window;
var _3=document;
var _4=false;
function markLoaded(){
_4=true;
};
if(_3.addEventListener){
_3.addEventListener("DOMContentLoaded",markLoaded,false);
}
if(_2.addEventListener){
_2.addEventListener("load",markLoaded,false);
}
if(_2.attachEvent){
_2.attachEvent("onload",markLoaded);
}
_3.write=function(_5){
var _6=_3.getElementsByTagNameNS(_1,"head")[0];
var _7=_3.getElementsByTagNameNS(_1,"body")[0];
var _8=_7?_7:_6;
var _9=null;
if(!_4){
var _a=_3.getElementsByTagNameNS(_1,"script");
_9=_a[_a.length-1];
_8=_9.parentNode;
}
HTMLParser(_5,{start:function(_b,_c,_d){
var el=_3.createElementNS(_1,_b);
for(var i=0;i<_c.length;i++){
el.setAttribute(_c[i].name,_c[i].value);
}
_8.appendChild(el);
if(!_d){
_8=el;
}
},end:function(tag){
_8=_8.parentNode;
},chars:function(_11){
if(_11){
_8.appendChild(_3.createTextNode(_11));
}
},comment:function(_12){
_8.appendChild(_3.createComment(_12));
}});
};
var _13=/^<(\w+)((?:\s+\w+(?:\s*=\s*(?:(?:"[^"]*")|(?:'[^']*')|[^>\s]+))?)*)\s*(\/?)>/,_14=/^<\/(\w+)[^>]*>/,_15=/(\w+)(?:\s*=\s*(?:(?:"((?:\\.|[^"])*)")|(?:'((?:\\.|[^'])*)')|([^>\s]+)))?/g;
var _16=makeMap("area,base,basefont,br,col,frame,hr,img,input,isindex,link,meta,param,embed");
var _17=makeMap("address,applet,blockquote,button,center,dd,del,dir,div,dl,dt,fieldset,form,frameset,hr,iframe,ins,isindex,li,map,menu,noframes,noscript,object,ol,p,pre,script,table,tbody,td,tfoot,th,thead,tr,ul");
var _18=makeMap("a,abbr,acronym,applet,b,basefont,bdo,big,br,button,cite,code,del,dfn,em,font,i,iframe,img,input,ins,kbd,label,map,object,q,s,samp,script,select,small,span,strike,strong,sub,sup,textarea,tt,u,var");
var _19=makeMap("colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr");
var _1a=makeMap("checked,compact,declare,defer,disabled,ismap,multiple,nohref,noresize,noshade,nowrap,readonly,selected");
var _1b=makeMap("script,style");
var _1c=function(_1d,_1e){
var _1f,_20,_21,_22=[],_23=_1d;
_22.last=function(){
return this[this.length-1];
};
while(_1d){
_20=true;
if(!_22.last()||!_1b[_22.last()]){
if(_1d.indexOf("<!--")==0){
_1f=_1d.indexOf("-->");
if(_1f>=0){
if(_1e.comment){
_1e.comment(_1d.substring(4,_1f));
}
_1d=_1d.substring(_1f+3);
_20=false;
}
}else{
if(_1d.indexOf("</")==0){
_21=_1d.match(_14);
if(_21){
_1d=_1d.substring(_21[0].length);
_21[0].replace(_14,parseEndTag);
_20=false;
}
}else{
if(_1d.indexOf("<")==0){
_21=_1d.match(_13);
if(_21){
_1d=_1d.substring(_21[0].length);
_21[0].replace(_13,parseStartTag);
_20=false;
}
}
}
}
if(_20){
_1f=_1d.indexOf("<");
var _24=_1f<0?_1d:_1d.substring(0,_1f);
_1d=_1f<0?"":_1d.substring(_1f);
if(_1e.chars){
_1e.chars(_24);
}
}
}else{
_1d=_1d.replace(new RegExp("(.*)</"+_22.last()+"[^>]*>"),function(all,_26){
_26=_26.replace(/<!--(.*?)-->/g,"$1").replace(/<!\[CDATA\[(.*?)]]>/g,"$1");
if(_1e.chars){
_1e.chars(_26);
}
return "";
});
parseEndTag("",_22.last());
}
if(_1d==_23){
throw "Parse Error: "+_1d;
}
_23=_1d;
}
parseEndTag();
function parseStartTag(tag,_28,_29,_2a){
if(_17[_28]){
while(_22.last()&&_18[_22.last()]){
parseEndTag("",_22.last());
}
}
if(_19[_28]&&_22.last()==_28){
parseEndTag("",_28);
}
_2a=_16[_28]||!!_2a;
if(!_2a){
_22.push(_28);
}
if(_1e.start){
var _2b=[];
_29.replace(_15,function(_2c,_2d){
var _2e=arguments[2]?arguments[2]:arguments[3]?arguments[3]:arguments[4]?arguments[4]:_1a[_2d]?_2d:"";
_2b.push({name:_2d,value:_2e,escaped:_2e.replace(/(^|[^\\])"/g,"$1\\\"")});
});
if(_1e.start){
_1e.start(_28,_2b,_2a);
}
}
};
function parseEndTag(tag,_30){
if(!_30){
var pos=0;
}else{
for(var pos=_22.length-1;pos>=0;pos--){
if(_22[pos]==_30){
break;
}
}
}
if(pos>=0){
for(var i=_22.length-1;i>=pos;i--){
if(_1e.end){
_1e.end(_22[i]);
}
}
_22.length=pos;
}
};
};
function makeMap(str){
var obj={},_35=str.split(",");
for(var i=0;i<_35.length;i++){
obj[_35[i]]=true;
}
return obj;
};
})();
}

