/* 
 * XHTML documment.write() Support (v1.5.1) - Parses string argument into DOM nodes
 *     appends them to the document immediately after the last loaded SCRIPT element,
 *     or to the BODY if the document has been loaded.
 *  by Weston Ruter, Shepherd Interactive <http://www.shepherd-interactive.com/>
 *  <http://weston.ruter.net/projects/xhtml-document-write/>
 * 
 * Copyright 2008, Shepherd Interactive. Licensed under GPL <http://creativecommons.org/licenses/GPL/2.0/>
 * Incorporates HTML Parser By John Resig <http://ejohn.org/files/htmlparser.js>
 * Original code by Erik Arvidsson, Mozilla Public License
 *
 * $Id$
 */

try{
document.write("");
if(window.opera&&document.documentElement.namespaceURI){
throw Error();
}
}
catch(e){
(function(){
var _1="http://www.w3.org/1999/xhtml";
var _2=window;
var _3=document;
var _4=false;
function markLoaded(){
_4=true;
};
if(_3.addEventListener){
_3.addEventListener("DOMContentLoaded",markLoaded,false);
}
if(_2.addEventListener){
_2.addEventListener("load",markLoaded,false);
}
if(_2.attachEvent){
_2.attachEvent("onload",markLoaded);
}
var _5=makeMap("_firebugConsoleInjector,_firebugConsole");
var _6;
var _7;
var _8;
_3.write=function(_9){
var _a;
if(!_4){
var _b=_3.getElementsByTagNameNS(_1,"script");
for(var i=_b.length-1;i>=0;i--){
if(!_b[i].id||!_5[_b[i].id]){
_a=_b[i];
break;
}
}
if(!_6){
_6=_a.parentNode;
}
if(_a!=_7){
_6=_a.parentNode;
_8=null;
_7=_a;
}
}else{
if(!_6){
_6=_3.getElementsByTagNameNS(_1,"body")[0];
}
}
if(_8){
_8.parse(_9);
}else{
_8=new HTMLParser(_9,{start:function(_d,_e,_f){
var el=_3.createElementNS(_1,_d);
for(var i=0;i<_e.length;i++){
el.setAttribute(_e[i].name,_e[i].value);
}
_6.appendChild(el);
if(!_f){
_6=el;
}
},end:function(tag){
_6=_6.parentNode;
},chars:function(_13){
if(_13){
_6.appendChild(_3.createTextNode(_13));
}
},comment:function(_14){
_6.appendChild(_3.createComment(_14));
}});
}
};
var _15=/^<(\w+)((?:\s+\w+(?:\s*=\s*(?:(?:"[^"]*")|(?:'[^']*')|[^>\s]+))?)*)\s*(\/?)>/,_16=/^<\/(\w+)[^>]*>/,_17=/(\w+)(?:\s*=\s*(?:(?:"((?:\\.|[^"])*)")|(?:'((?:\\.|[^'])*)')|([^>\s]+)))?/g;
var _18=makeMap("area,base,basefont,br,col,frame,hr,img,input,isindex,link,meta,param,embed");
var _19=makeMap("address,applet,blockquote,button,center,dd,del,dir,div,dl,dt,fieldset,form,frameset,hr,iframe,ins,isindex,li,map,menu,noframes,noscript,object,ol,p,pre,script,table,tbody,td,tfoot,th,thead,tr,ul");
var _1a=makeMap("a,abbr,acronym,applet,b,basefont,bdo,big,br,button,cite,code,del,dfn,em,font,i,iframe,img,input,ins,kbd,label,map,object,q,s,samp,script,select,small,span,strike,strong,sub,sup,textarea,tt,u,var");
var _1b=makeMap("colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr");
var _1c=makeMap("checked,compact,declare,defer,disabled,ismap,multiple,nohref,noresize,noshade,nowrap,readonly,selected");
var _1d=makeMap("script,style");
var _1e=function(_1f,_20){
var _21,_22,_23,_24=[];
_24.last=function(){
return this[this.length-1];
};
this.parse=function(_25){
last=_1f=_25;
while(_1f){
_22=true;
if(!_24.last()||!_1d[_24.last()]){
if(_1f.indexOf("<!--")==0){
_21=_1f.indexOf("-->");
if(_21>=0){
if(_20.comment){
_20.comment(_1f.substring(4,_21));
}
_1f=_1f.substring(_21+3);
_22=false;
}
}else{
if(_1f.indexOf("</")==0){
_23=_1f.match(_16);
if(_23){
_1f=_1f.substring(_23[0].length);
_23[0].replace(_16,parseEndTag);
_22=false;
}
}else{
if(_1f.indexOf("<")==0){
_23=_1f.match(_15);
if(_23){
_1f=_1f.substring(_23[0].length);
_23[0].replace(_15,parseStartTag);
_22=false;
}
}
}
}
if(_22){
_21=_1f.indexOf("<");
var _26=_21<0?_1f:_1f.substring(0,_21);
_1f=_21<0?"":_1f.substring(_21);
if(_20.chars){
_20.chars(_26);
}
}
}else{
_1f=_1f.replace(new RegExp("(.*)</"+_24.last()+"[^>]*>"),function(all,_28){
_28=_28.replace(/<!--(.*?)-->/g,"$1").replace(/<!\[CDATA\[(.*?)]]>/g,"$1");
if(_20.chars){
_20.chars(_28);
}
return "";
});
parseEndTag("",_24.last());
}
if(_1f==last){
throw "Parse Error: "+_1f;
}
last=_1f;
}
};
function parseStartTag(tag,_2a,_2b,_2c){
if(_19[_2a]){
while(_24.last()&&_1a[_24.last()]){
parseEndTag("",_24.last());
}
}
if(_1b[_2a]&&_24.last()==_2a){
parseEndTag("",_2a);
}
_2c=_18[_2a]||!!_2c;
if(!_2c){
_24.push(_2a);
}
if(_20.start){
var _2d=[];
_2b.replace(_17,function(_2e,_2f){
var _30=arguments[2]?arguments[2]:arguments[3]?arguments[3]:arguments[4]?arguments[4]:_1c[_2f]?_2f:"";
_2d.push({name:_2f,value:_30,escaped:_30.replace(/(^|[^\\])"/g,"$1\\\"")});
});
if(_20.start){
_20.start(_2a,_2d,_2c);
}
}
};
function parseEndTag(tag,_32){
if(!_32){
var pos=0;
}else{
for(var pos=_24.length-1;pos>=0;pos--){
if(_24[pos]==_32){
break;
}
}
}
if(pos>=0){
for(var i=_24.length-1;i>=pos;i--){
if(_20.end){
_20.end(_24[i]);
}
}
_24.length=pos;
}
};
this.parse(_1f);
};
function makeMap(str){
var obj={},_37=str.split(",");
for(var i=0;i<_37.length;i++){
obj[_37[i]]=true;
}
return obj;
};
})();
}

