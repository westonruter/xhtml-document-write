/* 
 * XHTML documment.write() Support (v1.5) - Parses string argument into DOM nodes
 *     appends them to the document immediately after the last loaded SCRIPT element,
 *     or to the BODY if the document has been loaded.
 *  by Weston Ruter, Shepherd Interactive <http://www.shepherd-interactive.com/>
 *  <http://weston.ruter.net/projects/xhtml-document-write/>
 * 
 * Copyright 2008, Shepherd Interactive. Licensed under GPL <http://creativecommons.org/licenses/GPL/2.0/>
 * Incorporates HTML Parser By John Resig <http://ejohn.org/files/htmlparser.js>
 * Original code by Erik Arvidsson, Mozilla Public License
 *
 * $Id$
 */

try{
document.write("");
if(window.opera&&document.documentElement.namespaceURI){
throw Error();
}
}
catch(e){
(function(){
var _1="http://www.w3.org/1999/xhtml";
var _2=window;
var _3=document;
var _4=false;
function markLoaded(){
_4=true;
};
if(_3.addEventListener){
_3.addEventListener("DOMContentLoaded",markLoaded,false);
}
if(_2.addEventListener){
_2.addEventListener("load",markLoaded,false);
}
if(_2.attachEvent){
_2.attachEvent("onload",markLoaded);
}
var _5=makeMap("_firebugConsoleInjector,_firebugConsole");
var _6;
var _7;
var _8;
_3.write=function(_9){
var _a;
if(!_4){
var _b=_3.getElementsByTagNameNS(_1,"script");
for(var i=_b.length-1;i>=0;i--){
if(!_b[i].id||!_5[_b[i].id]){
_a=_b[i];
break;
}
}
if(!_6){
_6=_a.parentNode;
}
if(_a!=_7){
_6=_a.parentNode;
_8=null;
_7=_a;
}
}else{
if(!_6){
_6=_3.getElementsByTagNameNS(_1,"body")[0];
}
}
if(_8){
_8.parse(_9);
}else{
_8=new HTMLParser(_9,{start:function(_d,_e,_f){
var el=_3.createElementNS(_1,_d);
for(var i=0;i<_e.length;i++){
el.setAttribute(_e[i].name,_e[i].value);
}
_6.appendChild(el);
if(!_f){
_6=el;
}
},end:function(tag){
_6=_6.parentNode;
},chars:function(_13){
if(_13){
_6.appendChild(_3.createTextNode(_13));
}
},comment:function(_14){
_6.appendChild(_3.createComment(_14));
}});
}
};
var _15=/^<(\w+)((?:\s+\w+(?:\s*=\s*(?:(?:"[^"]*")|(?:'[^']*')|[^>\s]+))?)*)\s*(\/?)>/,_16=/^<\/(\w+)[^>]*>/,_17=/(\w+)(?:\s*=\s*(?:(?:"((?:\\.|[^"])*)")|(?:'((?:\\.|[^'])*)')|([^>\s]+)))?/g;
var _18=makeMap("area,base,basefont,br,col,frame,hr,img,input,isindex,link,meta,param,embed");
var _19=makeMap("address,applet,blockquote,button,center,dd,del,dir,div,dl,dt,fieldset,form,frameset,hr,iframe,ins,isindex,li,map,menu,noframes,noscript,object,ol,p,pre,script,table,tbody,td,tfoot,th,thead,tr,ul");
var _1a=makeMap("a,abbr,acronym,applet,b,basefont,bdo,big,br,button,cite,code,del,dfn,em,font,i,iframe,img,input,ins,kbd,label,map,object,q,s,samp,script,select,small,span,strike,strong,sub,sup,textarea,tt,u,var");
var _1b=makeMap("colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr");
var _1c=makeMap("checked,compact,declare,defer,disabled,ismap,multiple,nohref,noresize,noshade,nowrap,readonly,selected");
var _1d=makeMap("script,style");
var _1e=function(_1f,_20){
this.index=null;
this.chars=null;
this.match=null;
this.stack=[];
this.stack.last=function(){
return this[this.length-1];
};
var _21=this;
this.parse=function(_22){
this.last=this.html=_22;
while(this.html){
this.chars=true;
if(!this.stack.last()||!_1d[this.stack.last()]){
if(this.html.indexOf("<!--")==0){
this.index=this.html.indexOf("-->");
if(this.index>=0){
if(_20.comment){
_20.comment(this.html.substring(4,this.index));
}
this.html=this.html.substring(this.index+3);
this.chars=false;
}
}else{
if(this.html.indexOf("</")==0){
this.match=this.html.match(_16);
if(this.match){
this.html=this.html.substring(this.match[0].length);
this.match[0].replace(_16,parseEndTag);
this.chars=false;
}
}else{
if(this.html.indexOf("<")==0){
this.match=this.html.match(_15);
if(this.match){
this.html=this.html.substring(this.match[0].length);
this.match[0].replace(_15,parseStartTag);
this.chars=false;
}
}
}
}
if(this.chars){
this.index=this.html.indexOf("<");
var _23=this.index<0?this.html:this.html.substring(0,this.index);
this.html=this.index<0?"":this.html.substring(this.index);
if(_20.chars){
_20.chars(_23);
}
}
}else{
this.html=this.html.replace(new RegExp("(.*)</"+this.stack.last()+"[^>]*>"),function(all,_25){
_25=_25.replace(/<!--(.*?)-->/g,"$1").replace(/<!\[CDATA\[(.*?)]]>/g,"$1");
if(_20.chars){
_20.chars(_25);
}
return "";
});
parseEndTag("",this.stack.last());
}
if(this.html==this.last){
throw "Parse Error: "+this.html;
}
this.last=this.html;
}
};
function parseStartTag(tag,_27,_28,_29){
if(_19[_27]){
while(_21.stack.last()&&_1a[_21.stack.last()]){
parseEndTag("",_21.stack.last());
}
}
if(_1b[_27]&&_21.stack.last()==_27){
parseEndTag("",_27);
}
_29=_18[_27]||!!_29;
if(!_29){
_21.stack.push(_27);
}
if(_20.start){
var _2a=[];
_28.replace(_17,function(_2b,_2c){
var _2d=arguments[2]?arguments[2]:arguments[3]?arguments[3]:arguments[4]?arguments[4]:_1c[_2c]?_2c:"";
_2a.push({name:_2c,value:_2d,escaped:_2d.replace(/(^|[^\\])"/g,"$1\\\"")});
});
if(_20.start){
_20.start(_27,_2a,_29);
}
}
};
function parseEndTag(tag,_2f){
if(!_2f){
var pos=0;
}else{
for(var pos=_21.stack.length-1;pos>=0;pos--){
if(_21.stack[pos]==_2f){
break;
}
}
}
if(pos>=0){
for(var i=_21.stack.length-1;i>=pos;i--){
if(_20.end){
_20.end(_21.stack[i]);
}
}
_21.stack.length=pos;
}
};
this.parse(_1f);
};
function makeMap(str){
var obj={},_34=str.split(",");
for(var i=0;i<_34.length;i++){
obj[_34[i]]=true;
}
return obj;
};
})();
}

